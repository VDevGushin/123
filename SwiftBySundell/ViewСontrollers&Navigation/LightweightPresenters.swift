//
//  LightweightPresenters.swift
//  SwiftBySundell
//
//  Created by Vladislav Gushin on 17/01/2019.
//  Copyright ¬© 2019 Vladislav Gushin. All rights reserved.
//

import UIKit

/*
 –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ - –∏–¥–µ—è –æ —Ç–æ–º, —á—Ç–æ –∫–∞–∂–¥—ã–π —Ç–∏–ø –≤ –∏–¥–µ–∞–ª–µ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ - —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ –æ–±—â–µ–ø—Ä–∏–∑–Ω–∞–Ω–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —ç—Ç–æ –ª–µ–≥—á–µ —Å–∫–∞–∑–∞—Ç—å, —á–µ–º —Å–¥–µ–ª–∞—Ç—å.
 
 –û—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –¥–µ–ª–æ –¥–æ—Ö–æ–¥–∏—Ç –¥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–æ —á–µ—Ç–∫–æ –æ—Ç–¥–µ–ª–∏—Ç—å –∫–∞–∂–¥—ã–π —Ç–∏–ø –æ—Ç –¥—Ä—É–≥–∏—Ö, –∏, –±–µ–∑—É—Å–ª–æ–≤–Ω–æ, –Ω–µ—Ä–µ–¥–∫–æ –≤–∏–¥–µ—Ç—å, —á—Ç–æ —Ç–∞–∫–∏–µ –∫–ª–∞—Å—Å—ã, –∫–∞–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –±–æ–ª—å—à–∏–º –Ω–∞–±–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–π –∏ –∑–∞–¥–∞—á, –ø–æ—Å–∫–æ–ª—å–∫—É –∏–º –æ–±—ã—á–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∏–º–µ—Ç—å –¥–µ–ª–æ —Å–æ –º–Ω–æ–≥–∏–º–∏ —Ä–∞–∑–Ω—ã–º–∏ –≤–µ—â–∞–º–∏, –æ—Ç –º–∞–∫–µ—Ç–∞ –¥–æ —Å—Ç–∏–ª—è, –¥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 
 –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á, –æ—Å–æ–±–µ–Ω–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∏–∑ –Ω–∞—à–∏—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ, –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã.
 */

// MARK: - Presentation logic
//–î–æ–ø—É—Å—Ç–∏–º, –º—ã —Ö–æ—Ç–∏–º –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ - –Ω–∞–ø—Ä–∏–º–µ—Ä, —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞. –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–∞–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π, –¥–∞–≤–∞–π—Ç–µ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ–º –≤–µ—Å—å —ç—Ç–æ—Ç –∫–æ–¥ –≤ ConfirmationPresenter, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫:
fileprivate struct ConfirmationPresenter {
    enum Outcome {
        case rejected, accepted
    }

    let question: String
    let acceptTitle: String
    let rejectTitle: String
    let handler: (Outcome) -> Void

    func present(in viewController: UIViewController) {
        let alert = UIAlertController(title: nil, message: question, preferredStyle: .alert)

        let rejectAction = UIAlertAction(title: rejectTitle, style: .cancel) { _ in
            self.handler(.rejected)
        }

        let acceptAction = UIAlertAction(title: acceptTitle, style: .default) { _ in
            self.handler(.accepted)
        }

        alert.addAction(rejectAction)
        alert.addAction(acceptAction)

        viewController.present(alert, animated: true)
    }
}

//Using
/*
 –ü—Ä–µ–ª–µ—Å—Ç—å –≤—ã—à–µ—É–ø–æ–º—è–Ω—É—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –ª–µ–≥–∫–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à –∫–æ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–¥–∫–ª–∞—Å—Å UIAlertController –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤ UIViewController - —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ –±—ã –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—Å–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, –¥–∞–∂–µ —Ç–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ.
 */
fileprivate class NoteViewController: UIViewController {
    func handleDeleteButtonTap() {
        let presenter = ConfirmationPresenter(question: "Are you sure you want to delete this note?",
                                              acceptTitle: "Yes, delete it!",
                                              rejectTitle: "Cancel",
                                              handler: {
                                                  outcome in
                                                  switch outcome {
                                                  case .accepted: break
            case .rejected: break
                                                  }

                                              })
        presenter.present(in: self)
    }
}


// MARK: - Wrapping things up
/*
 –î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –¥—Ä—É–≥–æ–π –ø—Ä–∏–º–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º MovieListViewController –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ª—é–±–∏–º—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–∫–∏ —Ñ–∏–ª—å–º–æ–≤ –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, –ø–æ—ç—Ç–æ–º—É –º—ã —Å–¥–µ–ª–∞–ª–∏ MovieListViewController –æ—á–µ–Ω—å –≥–∏–±–∫–∏–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤—Å–µ —ç—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - –ø–æ–∑–≤–æ–ª—è—è –≤–≤–æ–¥–∏—Ç—å UITableViewDataSource –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
 
 –ß—Ç–æ–±—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–µ—Å—å —ç—Ç–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –∫–æ–¥, –∞ —Ç–∞–∫–∂–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –Ω–∞—à MovieListViewController –±—É–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–ø–∞–∫–æ–≤–∞–Ω –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –¥–∞–≤–∞–π—Ç–µ —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–æ—Ä - –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –º—ã –Ω–∞–∑–æ–≤–µ–º –µ–≥–æ FavoritesPresenter:
 */
fileprivate struct FavorotesManager { }

fileprivate struct FavoritesDataSource {
    let manager: FavorotesManager
}

fileprivate struct FavoritesPresenter {
    let manager: FavorotesManager

    func present(in viewController: UIViewController) {
        let dataSource = FavoritesDataSource(manager: self.manager)
        let list = MovieListViewController(dataSource: dataSource)
        let navigationController = UINavigationController(rootViewController: list)
        list.navigationItem.leftBarButtonItem = UIBarButtonItem(barButtonSystemItem: .done, target: navigationController, action: #selector(UIViewController.dismissWithAnimation))

        viewController.present(navigationController, animated: true)
    }
}

fileprivate extension UIViewController {
    @objc func dismissWithAnimation() {
        self.dismiss(animated: true, completion: nil)
    }
}

fileprivate class MovieListViewController: UIViewController {
    let dataSource: FavoritesDataSource
    init(dataSource: FavoritesDataSource) {
        self.dataSource = dataSource
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

// Using
/*
 –ï—â–µ –æ–¥–Ω–∏–º –ø—Ä–∏—è—Ç–Ω—ã–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º —ç—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—Ç —Ñ–∞–∫—Ç, —á—Ç–æ HomeViewController (–∏ –≤—Å–µ –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ) –Ω–µ –¥–æ–ª–∂–Ω—ã –∑–Ω–∞—Ç—å, —á—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª—é—á–µ–Ω –≤ UINavigationController - —á—Ç–æ –¥–∞–µ—Ç –Ω–∞–º –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à—É—é –≥–∏–±–∫–æ—Å—Ç—å –≤ –±—É–¥—É—â–µ–º. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞—Ä–∞–¥–∏–≥–º–µ –≤ –±—É–¥—É—â–µ–º.
 */
fileprivate class HomeViewContrller: UIViewController {
    private lazy var manager = FavorotesManager()
    func presentFavorites() {
        let presenter = FavoritesPresenter(manager: self.manager)
        presenter.present(in: self)
    }
}

// MARK: - Enqueued presentation
fileprivate struct TutorialItem { }

fileprivate class TutorialViewController: UIViewController {
    let item: TutorialItem
    var completionHandler: () -> Void = { }

    init(item: TutorialItem) {
        self.item = item
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

fileprivate class TutorialPresenter {
    private let presentingViewContrller: UIViewController
    private weak var currentViewController: UIViewController?
    private var queue = [TutorialItem]()

    init(viewController: UIViewController) {
        self.presentingViewContrller = viewController
    }

    //We can now simply call tutorialPresenter.present() from anywhere where we want to present a tutorial, and our presenter will take care of the rest! üëç
    func present(_ item: TutorialItem) {
        // If we're already presenting a tutorial item, we'll
        // add the next item to the queue and return.
        guard self.currentViewController == nil else {
            return self.queue.append(item)
        }

        let viewController = TutorialViewController(item: item)
        viewController.completionHandler = { [weak self] in
            self?.currentViewController = nil
            self?.presentNextItemIfNeeded()
        }

        self.presentingViewContrller.present(viewController, animated: true, completion: nil)
        self.currentViewController = viewController
    }

    func presentNextItemIfNeeded() {
        guard !self.queue.isEmpty else {
            return
        }
        self.present(self.queue.removeFirst())
    }
}
