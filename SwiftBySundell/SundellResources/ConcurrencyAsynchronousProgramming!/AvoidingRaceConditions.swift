//
//  AvoidingRaceConditions.swift
//  SwiftBySundell
//
//  Created by Vladislav Gushin on 28/01/2019.
//  Copyright ¬© 2019 Vladislav Gushin. All rights reserved.
//

import UIKit

/*
 –£—Å–ª–æ–≤–∏–µ –≥–æ–Ω–∫–∏ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ –æ–∂–∏–¥–∞–µ–º—ã–π –ø–æ—Ä—è–¥–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ –ª–æ–≥–∏–∫–∞ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –º—ã –º–æ–≥–ª–∏ –±—ã –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—ã–ª–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –∏–ª–∏ —Å–ª—É—á–∞–π–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ–π–¥–µ—Ç –≤ —Å–∏—Å—Ç–µ–º—É.
 
 Race —É—Å–ª–æ–≤–∏—è –º–æ–≥—É—Ç –ø–æ–Ω–∞—á–∞–ª—É —á–∞—Å—Ç–æ –∫–∞–∑–∞—Ç—å—Å—è —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ–∂–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–æ—Å–∫–æ–ª—å–∫—É –∑–∞—á–∞—Å—Ç—É—é —Ç—Ä—É–¥–Ω–æ (–∏–ª–∏ –¥–∞–∂–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ) –ø—Ä–∏–¥—É–º–∞—Ç—å –¥–ª—è –Ω–∏—Ö –Ω–∞–¥–µ–∂–Ω—ã–µ —à–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –¥–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ–±—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –≥–æ–Ω–æ—á–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º, –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Ö –∏–∑–±–µ–∂–∞—Ç—å - –∏ –∫–∞–∫ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à –∫–æ–¥ –±–æ–ª–µ–µ —É—Å—Ç–æ–π—á–∏–≤—ã–º –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ.
 
 –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã —Å–æ–∑–¥–∞–µ–º AccessTokenService, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∫–æ–π-–ª–∏–±–æ —Ñ–æ—Ä–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ù–∞—à —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é AccessTokenLoader, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–±–æ—Ç—É –≤ —Å–µ—Ç–∏, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ —Å–∞–º —Å–µ—Ä–≤–∏—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –∫–∞–∫ API –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –∏–º–µ–µ—Ç –¥–µ–ª–æ —Å —Ç–∞–∫–∏–º–∏ –≤–µ—â–∞–º–∏, –∫–∞–∫ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ - –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
 */

fileprivate struct AccessToken {
    var isValid: Bool
}

fileprivate class AccessTokenLoader {
    func load(then handler: ((AccessToken) -> Void)) {

    }
}

fileprivate enum Result<T> {
    case value(T)
    case error(Error)
}

fileprivate class AccessTokenService {
    typealias Handler = (Result<AccessToken>) -> Void
    private let loader: AccessTokenLoader
    private var token: AccessToken?

    init(loader: AccessTokenLoader) {
        self.loader = loader
    }

    func retrieveToken(then handler: @escaping Handler) {
        if let token = self.token, token.isValid {
            return handler(.value(token))
        }

        self.loader.load { [weak self] result in
            self?.token = result
            handler(.value(result))
        }
    }
}

// MARK: - Enqueueing pending handlers
/*–í—ã—à–µ–ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ, –∏ –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ - —Ç–∞–∫ –∏ –µ—Å—Ç—å. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –º—ã –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–µ–º–Ω–æ–≥–æ –±–ª–∏–∂–µ –∫ –Ω–∞—à–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –º—ã —É–≤–∏–¥–∏–º, —á—Ç–æ –µ—Å–ª–∏ –º–µ—Ç–æ–¥ retrieveToken –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–≤–∞–∂–¥—ã - –∏ –≤—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–≥—Ä—É–∑—á–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –∑–∞–≥—Ä—É–∑–∫—É - –º—ã —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫–æ–Ω—á–∏–º –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–≤—É—Ö —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞. –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π, —Ç–∞–∫ –∫–∞–∫ —á–∞—Å—Ç–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ - –æ—á–µ–Ω—å –≤–µ—Ä–æ—è—Ç–Ω–æ, —á—Ç–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –º—ã –ø–æ–ª—É—á–∏–º —É—Å–ª–æ–≤–∏–µ —Å–æ—Å—Ç—è–∑–∞–Ω–∏—è, –∫–æ–≥–¥–∞ –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–µ—Ä–≤—ã–π.
 –í–∫–ª—é—á–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
 –ò—Ç–∞–∫, –∫–∞–∫ –º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ —Ç–∞–∫–æ–≥–æ —Ä–æ–¥–∞ —Ä–∞—Å—ã? –ü–µ—Ä–≤–æ–µ, —á—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å, —ç—Ç–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–∏–∫–∞–∫–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ, –∏ –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å—Ç–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –ª—é–±—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –≤ retrieveToken, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—á–∏–∫ –∑–∞–Ω—è—Ç –∑–∞–≥—Ä—É–∑–∫–æ–π.
 –î–ª—è —ç—Ç–æ–≥–æ –º—ã –Ω–∞—á–Ω–µ–º —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ pendingHandlers –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É –º–∞—Ä–∫–µ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–∞ - –∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ retrieveTokens, –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤. –ó–∞—Ç–µ–º –º—ã –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ–≤–µ—Ä—è—è, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞—à –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ç–µ–∫—É—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∑–∞–≥—Ä—É–∑—á–∏–∫–∞, –º—ã –≤—ã–∑–æ–≤–µ–º –Ω–æ–≤—ã–π –∑–∞–∫—Ä—ã—Ç—ã–π –º–µ—Ç–æ–¥ —Å –∏–º–µ–Ω–µ–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è:
 */
fileprivate class AccessTokenServiceWithQueue {
    typealias Handler = (Result<AccessToken>) -> Void
    private let loader: AccessTokenLoader
    private var token: AccessToken?
    private var pendingHandlers = [Handler]()

    init(loader: AccessTokenLoader) {
        self.loader = loader
    }

    func retrieveToken(then handler: @escaping Handler) {
        if let token = self.token, token.isValid {
            return handler(.value(token))
        }

        self.pendingHandlers.append(handler)
        guard pendingHandlers.count == 1 else { return }

        self.loader.load { [weak self] result in
            self?.handle(result)
        }
    }

    private func handle(_ result: AccessToken) {
        self.token = result
        let handlers = self.pendingHandlers
        self.pendingHandlers = []
        handlers.forEach { $0(.value(result)) }
    }
}
/*
 –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—è, —á—Ç–æ –¥–∞–∂–µ –µ—Å–ª–∏ retrieveToken –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–¥—Ä—è–¥, –≤ –∏—Ç–æ–≥–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–∫–µ–Ω - –∏ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—É–¥—É—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ üëç.
 
 –ü–æ—Å—Ç–∞–≤–∏–≤ –≤ –æ—á–µ—Ä–µ–¥—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –∫–∞–∫ –º—ã —ç—Ç–æ –¥–µ–ª–∞–ª–∏ –≤—ã—à–µ, –º—ã –º–æ–∂–µ–º –ø—Ä–æ–¥–µ–ª–∞—Ç—å –¥–æ–ª–≥–∏–π –ø—É—Ç—å, –∫–æ–≥–¥–∞ —Ä–µ—á—å –∏–¥–µ—Ç –æ–± –∏–∑–±–µ–∂–∞–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≥–æ–Ω–∫–∏ –≤ –∫–æ–¥–µ, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –¥–µ–ª–æ —Å –æ–¥–Ω–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è, - –Ω–æ —É –Ω–∞—Å –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –æ–¥–Ω–∞ –≤–∞–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –¥–æ–ª–∂–Ω—ã —Ä–µ—à–∏—Ç—å - –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ—Ç–æ–∫–æ–≤.
 */
// MARK: - Thread safety

/*
 –ü–æ–∫–∞ –Ω–∞—à –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Ç–æ–º –∂–µ –ø–æ—Ç–æ–∫–µ, –º—ã –º–æ–∂–µ–º –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —á–∏—Ç–∞–µ–º –∏ –ø–∏—à–µ–º –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –Ω–∞—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏. –û–¥–Ω–∞–∫–æ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –≤–≤–µ–¥–µ–º –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º, –¥–≤–∞ –ø–æ—Ç–æ–∫–∞ –º–æ–≥—É—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å —á—Ç–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–ø–∏—Å—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è, —á—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É —É—Å—Ç–∞—Ä–µ–≤–∞–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≥–æ –∏–∑ –ø–æ—Ç–æ–∫–æ–≤.
 
 –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–∞—à AccessTokenService —Ä–∞–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –≤ –æ–¥–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ –≥–æ–Ω–∫–∏, –ø–æ–º–µ—â–∞—è –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É –∏ —Ç—É –∂–µ —Å–ª—É–∂–±—É –º–∞—Ä–∫–µ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–∞ , –º—ã –º–æ–∂–µ–º –±—ã—Å—Ç—Ä–æ –æ–∫–∞–∑–∞—Ç—å—Å—è –≤ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—à –º–∞—Å—Å–∏–≤ pendingHandlers –±—É–¥–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º—É—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤. –ï—â–µ —Ä–∞–∑, —É –Ω–∞—Å –µ—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–∫–∏ –≤ –Ω–∞—à–∏—Ö —Ä—É–∫–∞—Ö.
 
 –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–æ–≤ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ–∫–æ–≤–æ–π –≥–æ–Ω–∫–∏, –æ–¥–∏–Ω –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö Apple - —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ—â—å Grand Central Dispatch, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–æ—Ç–æ–∫–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–µ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—á–µ—Ä–µ–¥–∏. ,
 
 –î–∞–≤–∞–π—Ç–µ –≤–µ—Ä–Ω–µ–º—Å—è –∫ –Ω–∞—à–µ–º—É AccessTokenService –∏ —Å–¥–µ–ª–∞–µ–º –µ–≥–æ –ø–æ—Ç–æ—á–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É—è –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é DispatchQueue –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ú—ã –Ω–∞—á–Ω–µ–º —Å –ø—Ä–∏–Ω—è—Ç–∏—è –≤–Ω–µ–¥—Ä–µ–Ω–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (—á—Ç–æ–±—ã —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ) –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—É—é, –∑–∞—Ç–µ–º - –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –Ω–∞—à–µ–≥–æ –º–µ—Ç–æ–¥–∞ retrieveToken - –æ—Ç–ø—Ä–∞–≤–∏–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –≤ –Ω–∞—à—É –æ—á–µ—Ä–µ–¥—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –º—ã –±—É–¥–µ–º –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–∫–µ–Ω–∞, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —á–µ–≥–æ –Ω–∞—à –∫–ª–∞—Å—Å —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
 */

fileprivate class AccessTokenServiceWithGCD {
    typealias Handler = (Result<AccessToken>) -> Void

    private let loader: AccessTokenLoader
    private let queue: DispatchQueue
    private var token: AccessToken?
    private var pendingHandlers = [Handler]()

    init(loader: AccessTokenLoader,
         queue: DispatchQueue = .init(label: "AccessToken")) {
        self.loader = loader
        self.queue = queue
    }

    func retrieveToken(then handler: @escaping Handler) {
        self.queue.async { [weak self] in
            self?.performRetrieval(with: handler)
        }
    }
    /*–ö–∞–∫ –∏ —Ä–∞–Ω—å—à–µ, –º—ã –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç—ã–π –º–µ—Ç–æ–¥ –≤–Ω—É—Ç—Ä–∏ –Ω–∞—à–µ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫. –í –Ω–∞—à–µ–º –Ω–æ–≤–æ–º –º–µ—Ç–æ–¥–µ executeRetrieval –º—ã –±—É–¥–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ —Ä–∞–Ω—å—à–µ - —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤ –≤—ã–∑–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏ - –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–æ—Ç–æ–∫–∞:*/
    private func performRetrieval(with handler: @escaping Handler) {
        if let token = self.token, token.isValid {
            return handler(.value(token))
        }

        self.pendingHandlers.append(handler)

        guard self.pendingHandlers.count == 1 else { return }

        self.loader.load { [weak self] result in
            self?.queue.async {
                handler(.value(result))
            }
        }
    }
}
