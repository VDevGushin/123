//
//  ModellingState.swift
//  SwiftBySundell
//
//  Created by Vladislav Gushin on 14/01/2019.
//  Copyright ¬© 2019 Vladislav Gushin. All rights reserved.
//

import UIKit


// MARK: - A single source of truth
/*
 –û–¥–∏–Ω –∫–ª—é—á–µ–≤–æ–π –ø—Ä–∏–Ω—Ü–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç –∏–º–µ—Ç—å –≤ –≤–∏–¥—É –ø—Ä–∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è ¬´–µ–¥–∏–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø—Ä–∞–≤–¥—ã¬ª. –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ –≤–∞–º –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –≤ –∫–∞–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å. –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä.
 –î–æ–ø—É—Å—Ç–∏–º, –º—ã —Å—Ç—Ä–æ–∏–º –∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —É –≤—Ä–∞–≥–æ–≤ –µ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, –∞ —Ç–∞–∫–∂–µ —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –≤ –∏–≥—Ä–µ –æ–Ω–∏ –∏–ª–∏ –Ω–µ—Ç. –ú—ã –º–æ–∂–µ–º —Å–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É—è –¥–≤–∞ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞ Enemy, –Ω–∞–ø—Ä–∏–º–µ—Ä:
 */
fileprivate class Enemy {
    var health = 10
    var isInPlay = false
}

/*
–•–æ—Ç—è –≤—ã—à–µ—Å–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä—è–º–æ, –æ–Ω–æ –º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—Å –≤ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø—Ä–∞–≤–¥—ã.
 –°–∫–∞–∂–µ–º —Ç–∞–∫, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–¥–æ—Ä–æ–≤—å–µ –≤—Ä–∞–≥–∞ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç –Ω—É–ª—è, –µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –∏–∑ –∏–≥—Ä—ã. –ò—Ç–∞–∫, –≥–¥–µ-—Ç–æ –≤ –Ω–∞—à–µ–º –∫–æ–¥–µ —É –Ω–∞—Å –µ—Å—Ç—å –ª–æ–≥–∏–∫–∞, —á—Ç–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–∏–º:
 */

fileprivate func enemyDidTakeDamage(enemy: Enemy) {
    if enemy.health <= 0 {
        enemy.isInPlay = false
    }
}

/*
 –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ –º—ã –≤–≤–æ–¥–∏–º –Ω–æ–≤—ã–µ –ø—É—Ç–∏ –∫–æ–¥–∞, –≥–¥–µ –º—ã –∑–∞–±—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.
 –ù–∞–ø—Ä–∏–º–µ—Ä, –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å –Ω–∞—à–µ–º—É –∏–≥—Ä–æ–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∞—Ç–∞–∫—É, –∫–æ—Ç–æ—Ä–∞—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö –≤—Ä–∞–≥–æ–≤ –Ω–∞ –Ω–æ–ª—å:
 */
fileprivate func performSpecialAttack(allEnemies: Enemy...) {
    for enemy in allEnemies {
        enemy.health = 0
    }
}

/*
 –ö–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å –≤—ã—à–µ, –º—ã –æ–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –≤—Å–µ—Ö –≤—Ä–∞–≥–æ–≤, –Ω–æ –∑–∞–±—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–∏—Ç—å isInPlay.
 –≠—Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –æ—à–∏–±–∫–∞–º –∏ —Å–∏—Ç—É–∞—Ü–∏—è–º, –∫–æ–≥–¥–∞ –º—ã –æ–∫–∞–∂–µ–º—Å—è –≤ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
 –í —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º–∞–Ω—á–∏–≤–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É, –¥–æ–±–∞–≤–∏–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫:
 */

fileprivate func performSpecialAttackWithCheck(allEnemies: Enemy...) {
    for enemy in allEnemies {
        if enemy.isInPlay && enemy.health > 0 {
            enemy.health = 0
        } else {
            return
        }
    }
}
/*–•–æ—Ç—è –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è ¬´–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞¬ª, –æ–Ω–æ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —Ç–æ–º—É, —á—Ç–æ —Å–ª–æ–∂–Ω–µ–µ –±—É–¥–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–≥–∫–æ —Å–ª–æ–º–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –º—ã –¥–æ–±–∞–≤–∏–º –±–æ–ª—å—à–µ —É—Å–ª–æ–≤–∏–π –∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ï—Å–ª–∏ –≤—ã –ø–æ–¥—É–º–∞–µ—Ç–µ –æ–± —ç—Ç–æ–º, —Ç–æ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –ø–æ–¥–æ–±–Ω–æ–µ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–º—É - –≤—Å–µ —Ä–∞–≤–Ω–æ, —á—Ç–æ –Ω–µ –¥–æ–≤–µ—Ä—è—Ç—å –Ω–∞—à–∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º API, –ø–æ—Å–∫–æ–ª—å–∫—É –º—ã –¥–æ–ª–∂–Ω—ã —Ç–∞–∫ –∑–∞—â–∏—â–∞—Ç—å—Å—è –æ—Ç –Ω–∏—Ö üòï
 
 –û–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É –Ω–∞—Å –±—ã–ª –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã, —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ isInPlay –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ Enemy —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º didSet –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ health:*/
fileprivate class EnemyWithAutoCheck {
    //–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è –≤—Ä–∞–≥–∞, –∏ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ isInPlay –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ üëç
    var health = 10 {
        didSet { putOutOfPlayIfNeeded() }
    }

    // Important to only allow mutations of this property from within this class
    private(set) var isInPlay = true

    private func putOutOfPlayIfNeeded() {
        guard health <= 0 else { return }
        isInPlay = false
        remove()
    }

    private func remove() { }
}

// MARK: - Making states exclusive
fileprivate struct Task {
    enum State {
        case inProgress
        case isFinished(file: File)
    }

    var state: State = .inProgress
    func start() { }
    func cancel() { }

    static func download(url: URL) -> Task {
        return Task()
    }
}
fileprivate struct File { }
//–î–æ–ø—É—Å—Ç–∏–º, –º—ã —Å–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º —Å–∫–∞—á–∏–≤–∞—Ç—å –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ URL. –î–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:
fileprivate struct Video {
    let url: URL
    let downloadTask: Task?
    var file: File?
    var isPlaying = false
    var progress: Double = 0
}
/*
 –ú—ã —Ç–∞–∫–∂–µ –æ–±—ã—á–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ç–µ–º, —á—Ç–æ –ø–∏—à–µ–º —Å–ª–æ–∂–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É, –≤–∫–ª—é—á–∞—é—â—É—é –ø—É—Ç–∏ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤ –∏–¥–µ–∞–ª–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –≤–≤–æ–¥–∏—Ç—å—Å—è:
 */
fileprivate func workWith(video: Video) {
    if let downloadTask = video.downloadTask {
        //handle download
    } else if let file = video.file {
        // perform playback
    } else {

    }
}
//–Ø —á–∞—Å—Ç–æ —Ä–µ—à–∞—é —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—á–µ–Ω—å —á–µ—Ç–∫–∏—Ö, –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:
fileprivate struct VideoV1 {
    struct PlaybackState {
        let file: File
        var progress: Double
    }

    enum State {
        case willDownload(from: URL)
        case downloading(task: Task)
        case playing(PlaybackState)
        case paused(PlaybackState)
    }

    var state: State
}

extension VideoV1 {
    var downloadTask: Task? {
        guard case let .downloading(task) = state else { return nil }
        return task
    }
}

// MARK: - Rendering reactively
/*–û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø–∏—Å–∞—Ç—å –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–º–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ if / else, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ), –≤—Å–µ —Å—Ç–∞–Ω–µ—Ç –¥–æ–≤–æ–ª—å–Ω–æ —É—Ä–æ–¥–ª–∏–≤–æ. –¢–∞–∫ –∫–∞–∫ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–º –Ω—É–∂–Ω–∞, ¬´—Å–∫—Ä—ã—Ç–∞¬ª –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö, –Ω–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å –º–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π –∏–ª–∏, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã case –ø–æ–∑–≤–æ–ª—è—é—Ç ¬´–ø–æ–ª—É—á–∏—Ç—å –µ–µ¬ª.
 
 –ù–∞–º –Ω—É–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –Ω–∞—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å –∫–æ–¥–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞, –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ –º—ã –º–æ–≥–ª–∏ –±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä–∞:*/

fileprivate class VideoPlayerViewController: UIViewController {
    struct Player {
        func play() { }
        func pause() { }
    }

    let player = Player()

    var video: VideoV1 {
        didSet {
            self.render()
            self.handleStateChange()
        }
    }

    fileprivate lazy var actionButton = UIButton(frame: .zero)

    init(video: VideoV1) {
        self.video = video
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.video.downloadTask?.cancel()
    }

    /*–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—à–µ–≥–æ –≤–∏–¥–µ–æ, –Ω–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è. –£ –Ω–∞—Å –µ—Å—Ç—å –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã –∏ –Ω–µ—Ç –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π. –ó–∞—Ç–µ–º –º—ã –º–æ–∂–µ–º —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞—à –º–µ—Ç–æ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞, —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ –Ω–∞—à–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—à–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:*/
    private func render() {
        self.renderActionButton()
        //self.renderVideoSurface()
        //self.renderNavigationBarButtonItems()
    }

    private func renderActionButton() {
        let actionButtonImage: UIImage = resolveActionButtonImage()
        actionButton.setImage(actionButtonImage, for: .normal)
    }

    private func resolveActionButtonImage() -> UIImage {
        switch video.state {
        case .willDownload:
            return UIImage(contentsOfFile: "download.png")!
        case .downloading:
            return UIImage(contentsOfFile: "downloading.png")!
        case .paused:
            return UIImage(contentsOfFile: "pause.png")!
        case .playing:
            return UIImage(contentsOfFile: "paying.png")!
        }
    }
}

// MARK: - Handling state changes

extension VideoPlayerViewController {
    func handleStateChange() {
        switch self.video.state {
        case .willDownload(from: let url):
            let task = Task.download(url: url)
            task.start()
            video.state = .downloading(task: task)
        case .downloading(task: let task):
            switch task.state {
            case .inProgress: break
            case .isFinished(file: let file):
                let playBackState = VideoV1.PlaybackState(file: file, progress: 0.0)
                video.state = .playing(playBackState)
            }
        case .playing:
            self.player.play()
        case .paused:
            self.player.pause()
        }
    }
}

// MARK: - Extracting information
